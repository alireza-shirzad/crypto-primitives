use core::str::FromStr;

use crate::sponge::rescue::{RescueConfig, RescueSponge};
use crate::sponge::test::Fr;
use crate::sponge::{Absorb, AbsorbWithLength, CryptographicSponge, FieldBasedCryptographicSponge};
use ark_ff::{One, PrimeField, UniformRand};
use ark_std::test_rng;
use num_bigint::BigUint;

fn assert_different_encodings<F: PrimeField, A: Absorb>(a: &A, b: &A) {
    let bytes1 = a.to_sponge_bytes_as_vec();
    let bytes2 = b.to_sponge_bytes_as_vec();
    assert_ne!(bytes1, bytes2);

    let sponge_param = rescue_parameters_for_test();
    let mut sponge1 = RescueSponge::<F>::new(&sponge_param);
    let mut sponge2 = RescueSponge::<F>::new(&sponge_param);

    sponge1.absorb(&a);
    sponge2.absorb(&b);

    assert_ne!(
        sponge1.squeeze_native_field_elements(3),
        sponge2.squeeze_native_field_elements(3)
    );
}

#[test]
fn single_field_element() {
    let mut rng = test_rng();
    let elem1 = Fr::rand(&mut rng);
    let elem2 = elem1 + Fr::one();

    assert_different_encodings::<Fr, _>(&elem1, &elem2)
}

#[test]
fn list_with_constant_size_element() {
    let mut rng = test_rng();
    let lst1: Vec<_> = (0..1024 * 8).map(|_| Fr::rand(&mut rng)).collect();
    let mut lst2 = lst1.to_vec();
    lst2[3] += Fr::one();

    assert_different_encodings::<Fr, _>(&lst1, &lst2)
}

struct VariableSizeList(Vec<u8>);

impl Absorb for VariableSizeList {
    fn to_sponge_bytes(&self, dest: &mut Vec<u8>) {
        self.0.to_sponge_bytes_with_length(dest)
    }

    fn to_sponge_field_elements<F: PrimeField>(&self, dest: &mut Vec<F>) {
        self.0.to_sponge_field_elements_with_length(dest)
    }
}

#[test]
fn list_with_nonconstant_size_element() {
    let lst1 = vec![
        VariableSizeList(vec![1u8, 2, 3, 4]),
        VariableSizeList(vec![5, 6]),
    ];
    let lst2 = vec![
        VariableSizeList(vec![1u8, 2]),
        VariableSizeList(vec![3, 4, 5, 6]),
    ];

    assert_different_encodings::<Fr, _>(&lst1, &lst2);
}

#[test]
fn test_squeeze_cast_native() {
    let mut rng = test_rng();
    let sponge_param = rescue_parameters_for_test();
    let elem = Fr::rand(&mut rng);
    let mut sponge1 = RescueSponge::<Fr>::new(&sponge_param);
    sponge1.absorb(&elem);
    let mut sponge2 = sponge1.clone();

    // those two should return same result
    let squeezed1 = sponge1.squeeze_native_field_elements(5);
    let squeezed2 = sponge2.squeeze_field_elements::<Fr>(5);

    assert_eq!(squeezed1, squeezed2);
}

#[test]
fn test_macros() {
    let sponge_param = rescue_parameters_for_test();
    let mut sponge1 = RescueSponge::<ark_bls12_381::Fq>::new(&sponge_param);
    sponge1.absorb(&vec![0, 0, 0]);
    let _ = sponge1.squeeze_native_field_elements(3);
    // assert_eq!(actual, expected);
}

/// Generate default parameters (bls381-fr-only) for alpha = 17, state-size = 8
pub(crate) fn rescue_parameters_for_test<F: PrimeField>() -> RescueConfig<F> {
    let alpha: u64 = 5;
    let alpha_inv: BigUint = BigUint::from_str(
        "20974350070050476191779096203274386335076221000211055129041463479975432473805",
    )
    .unwrap();
    let mds = vec![
        vec![
            F::from_str(
                "52435875175126190479447740508185965837690552500527637822603658699938581066864",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "52435875175126190479447740508185965837690552500527637822603658699938534124913",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "52435875175126190479447740508185965837690552500527637822603658699922104442063",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "52435875175126190479447740508185965837690552500527637822603658694270581781713",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str("137200").map_err(|_| ()).unwrap(),
            F::from_str("54762351").map_err(|_| ()).unwrap(),
            F::from_str("19167800400").map_err(|_| ()).unwrap(),
            F::from_str("6593435097550").map_err(|_| ()).unwrap(),
        ],
        vec![
            F::from_str(
                "52435875175126190479447740508185965837690552500527637822603658699938581164563",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "52435875175126190479447740508185965837690552500527637822603658699938573341713",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "52435875175126190479447740508185965837690552500527637822603658699935841949364",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "52435875175126190479447740508185965837690552500527637822603658698996613844913",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str("400").map_err(|_| ()).unwrap(),
            F::from_str("140050").map_err(|_| ()).unwrap(),
            F::from_str("48177200").map_err(|_| ()).unwrap(),
            F::from_str("16531644851").map_err(|_| ()).unwrap(),
        ],
    ];

    let arc = vec![
        vec![
            F::from_str(
                "23134431890904997735913685390433273947519177060544011867815065124418348995661",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "7910743581020883359489900822814213105822551758045258908574127548576902234202",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "6452335108146897903818881932868089947456740590166061243393158685187431809297",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "864592593827916191968939823230510547087468030011538620003456937932684270153",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "38559831148991359569240421320742457813901373970667612903096765001678689742869",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "44432094719863142927213238093899283700039162038776502993701830158231473502718",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "13786878310315045269120166277183380710599519606157001198417893850005860761477",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "17036162502882675914728275738142065498870974756580444696024180584972335393891",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "33297391939828784001334305802801790593075215229341062678759834559352791736927",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "30500234470117650473907563119990479857361330029198334465374149341676986657115",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "28368430002799198204829257649919634676282026294040173648357765445674005961616",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "9971774186674696614989363797869882469420353008371920226950903037350505417985",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "38139940790606785825103193122238735657582566078114455777468513830487946069923",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "18494333247252274673841361720222549391212096862516923705801761369032339310465",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "39473154482456623768629668349330022458952017097397018586008411120523622633522",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "49285468826209236211279126413673418598127797981942143090059666672629931469385",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "37573115437821831291655432604342578198375078311237242116810739862690145869225",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "27159986956208459140740586738884801802553721748425801853018806317642115259465",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "50214917776783317494180761535986162125563373683868209887890350167269467512946",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "33192867848214168029937060315398544504185295780147134497700076703607952805601",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "50547084830917374624389766622731065576522729673796501202951652168746034262368",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "45100620163299107975959845063844422497694960652741628584970040113210087450662",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "28385120759308049649771453408964811097622465677204481653130542380799307518408",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "35505667235096341555371720396459529907006829254583697277239853917493427123171",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "16437023531659726503682820269358772433184823533333464461469690236822611246932",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "49360243277754004678870001664997850734809212162384644335519685096097001288746",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "8366523254506253216955925296723301364165909408966688192695903971021249968759",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "32459638038196976591500542123818841546669374539590905536922780381223051269547",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "22599560612315772755286575091483116315925260320221561394233776132305161190561",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "16229934200422104594884143900568445503380871501895946009917550290753020752637",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "17517715034137249648481695275508773137979656298150763634847149919185663637655",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "45947279115715765148360788762909806671057420057351947155669138664467561798989",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "38229297807694040917955834901740313151512726422553249211118784759282147254077",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "19221546762665803708415808219454804973762879918238939441381811045896992381109",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "33231993603873329070501348145497728179419527307416430409856815932181772452630",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "44458989315723037569515354400025898188417538412399056946002281608928012076586",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "24097312182414801078940320939859383216367533770388304058972565863202612417326",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "34256182992584397437238816392424956796177998428482016693069842948650455465667",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "27060035464776105302994958363141504784786371731529349414072592535017130374008",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "17415618923957471534182927609934477683351352413272869403402000253948609094158",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "52060491319769018565163753644800488203563135506472497361838613747294343804114",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "1576362207015741288206059930042566539467434543957819902177550750073890852683",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "8253285684584554153849658552191085295583616802943045548686466429839116309878",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "15228514972361056807058151246098278735034513446245359457360228365631138432464",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "38783524586591753822986895661611634222017618368881437223506280603887659991356",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "22924959878025315031997085972756214001369606050285016376071539202766714623098",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "38950764297104469352344857946933662562545322621139995330167708101102044854910",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "11582888283975802643911017125775178169823051538957372067698650122726375950434",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "2298059043453100803649451299470643637099839499417037430896288122564116673326",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "47452596181551524646344358930874945080161659084551765779147813564221166652068",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "24182618861502016111021387835225265356539367730170595823767549536597589758279",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "14893912374919937388411364573314859358172657326695138742923676384357192372360",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "29398955694234023746472399069867629004542497600023389447384583977723258550192",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "36431673144691658691089220672109647461388222858311362067310271835971778148239",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "36492546966674475841438383178903363293964948716421208618060366101436800890790",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "39826799880794424638601874310358734694596460435322030277945017973910646589658",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "36662659413289416298119595844374289415379142322557068765425566585291305461011",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "38017535128209347092713795357871139666671551695819603361759727956851537514709",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "25434598699479962479879799356660079088973594621334634094152711756591035511679",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "33336898409062469195367067121198433779512635331177938007459412699788883108767",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "36058492436047198232978210456456061345170502778325117411208214452676002954201",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "14929481097395660251041965124240362591858660791456046253123033940975701514456",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "46289456091709068352930110828228678138660509736781390773985243886583143161896",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "14111091112977253742344847253086777239100006548059301114340049030467157387521",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "23508471880487400547770156512200772032889406124325897152916765048940153794095",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "16427729880783669957687779378358330473153574875195990658467800363160755677791",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "40156212882518721479460476494171767350034540523507037311923208389487152164489",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "26466836315288637608098985482060993155004017219176998749277566727915735967085",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "12888991686625632077905083939301155235848796738397906807998959514789614307101",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "6784648945900955205375833568502720684047995011038533579314932408073600302438",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "44283955455419102825730907918077389640930999889828224092875982380225907905576",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "21577906067866213753420832310759166345133214697458479927528550794777093745604",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "38676501821726372170081401661551268994693205369401304895157734309488019380911",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "18529238452898077491659062501197031745896551150529843021252022108041840991725",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "39772233475672473946716838776583251658997392411594037169310522755188417064472",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "48671926799613401149453947988763058951611718216954721361239302424336671881515",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "26061735084460790107366459209731985475376433843933274332541132225962092927733",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "24476140360704277298499598001474042644853190438756563291732720884448772397090",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "35748587835271739316324970945389055874118783613333018094991998493311506731782",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "47796681825820555809507630731803833582122742147864710760222058561602842001598",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "40129439376092624311792893362370068647875773785715766199288734633835269388506",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "22953237491934857847613812618498396296702277164511710957864161394836877126161",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "29883326359097154867527259575122302865251616498628736645388175015904851526169",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "16072876630565035721133423676805583416603803842527477499864696244977108270962",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "24433700016212560423407666099058783317053813403174801115287910358608146647763",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "45621659799852625322132052822408291445398292320558577340143231454608533229003",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "46536854208059093798042581691627728318294548204429580171491758231887086308112",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "44290182871662828030169493647139274231335308414589340572678350270417540283009",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "24250445856569954871622245222941720285145845445950474905864907057534343371457",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "25464299025380640073894563298622770863524901688551682692256088582694681257991",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "48318976335409296081239636812736844416642798055771900654762783556487073695991",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "27416530804116379123268279724889870598678372756104891540114066426635076293490",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "199228435670075738810018840314890086674908720274885080714863258792386713132",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "5409167973407743302372619466704081038889320188478946053340045998738973947167",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "13434167199395645551742078879595157181938211296502254602943139432040945799876",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "38812643263458464757761860102011279525010950636150476516702289987662118941842",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
        vec![
            F::from_str(
                "18052247500214455977292949825560594271643829386764412343087015646067353331355",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "68369435126047993922545267004639203490461725090813907915976375458289016380",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "2888545834527802263243399767681989249863878258231930802647884036794912638290",
            )
            .map_err(|_| ())
            .unwrap(),
            F::from_str(
                "32483396880170305854478259671129578112226318950991647664509323211693485555524",
            )
            .map_err(|_| ())
            .unwrap(),
        ],
    ];

    let rounds = 12;
    let capacity = 1;
    let rate = 3;
    RescueConfig {
        rounds,
        alpha,
        alpha_inv,
        arc,
        mds,
        rate,
        capacity,
    }
}
